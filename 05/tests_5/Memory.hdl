// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl
/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
	//// Replace this comment with your code.
//Decide which part of the memory we want to reach.
    DMux4Way(in=load , sel=address[13..14] , a=Ramload1 , b=Ramload2 , c=ScreenLoad , d=KeyboardLoad);
    //We'll load the input to the correct place in the memory.
    //Choose the correct RamLoad value that will be the input of Ram16K load.
    Or(a=Ramload1 , b=Ramload2 , out=OrLoad);
    //Ram16K address is 14 bit bus.
    RAM16K(in=in , load=OrLoad , address=address[0..13], out=Ram16Out);
    //Screen address input is 13 bit bus.
    Screen(in=in , load=ScreenLoad , address=address[0..12], out=ScreenOut);
    //Keyboard output us 16 bit bus.
    Keyboard(out=Keyboardout);
    //We'll output the value stored in the memory.
    Mux4Way16(a=Ram16Out , b=Ram16Out , c=ScreenOut , d=Keyboardout , sel=address[13..14] , out=out); 	

}
